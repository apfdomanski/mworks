---


name: Variables
is_group: yes
icon: smallFolder


---


name: Actions
is_group: yes
icon: smallFolder
description: >
    Actions are paradigm components which cause some action (such as
    playing a sound, showing a visual stimulus, or assigning a variable) to
    occur


---


name: Transitions
is_group: yes
icon: smallFolder
description: >
    Transitions are paradigm components which control how you move through
    a task system.  Each state loops through its transition list until one
    of its transitions returns a valid target state.


---


name: Stimuli
is_group: yes
icon: smallStimulusFolder
description: Visual and auditory stimuli


---


name: Paradigm Components
is_group: yes
icon: smallFolder
description: >
    Experiment building blocks (e.g. block, trial, task-system, etc.)


---


name: Input/Output
is_group: yes
icon: smallIOFolder
description: I/O devices


---


name: Filters
is_group: yes
icon: smallIOFolder
description: Filters and calibrators


---


name: Optimizers and Variable Monitors
is_group: yes
icon: smallFolder
description: >
    A variety of objects that watch variable values, automatically perform
    computations, and output results


---


name: IODevices
signature: io_devices
mandatory_tag: IO Devices
icon: smallIOFolder
display_as_group: yes


---


name: Sounds
signature: sounds
mandatory_tag: Sounds
icon: smallFolder
display_as_group: yes


---


name: Stimuli
signature: stimuli
mandatory_tag: Stimuli
icon: smallStimulusFolder
display_as_group: yes


---


name: Variables
signature: variables
mandatory_tag: Variables
icon: smallVariablesFolder
display_as_group: yes


---


name: Calibrators
signature: calibrators
mandatory_tag: Calibrators
icon: smallFolder
display_as_group: yes


---


name: Optimizers
signature: optimizers
mandatory_tag: Optimizers
icon: smallFolder
display_as_group: yes


---


name: Filters
signature: filters
mandatory_tag: Filters
icon: smallFolder
display_as_group: yes


---


name: Experiment
signature: experiment
mandatory_tag: Experiment
icon: smallExperiment
display_as_group: yes


---


name: Folder
signature: folder
icon: smallFolder
group: Variables
allowed_parent: 
  - Variables
  - IODevices
  - Filters
  - Optimizers
  - Stimuli
  - Sounds
  - Calibrators
description: >
    A folder for (purely) organizational purposes.  Variables defined in a
    folder will be displayed as an expandable group in MWClient's variables
    window.


---


name: Variable
signature: variable
icon: xyz
inspector: VariableInspectorView
group: Variables
allowed_parent: 
  - Variables
  - Folder
description: A variable object.
parameters: 
  - 
    name: default_value
    required: yes
    example: 0
  - 
    name: type
    options: [any, boolean, integer, float, string, list]
    default: any
    deprecated: yes
  - 
    name: scope
    options: [global, local]
    default: global
  - 
    name: logging
    options: [never, when_changed]
    default: when_changed
  -
    name: persistant
    default: 'NO'
  - 
    name: exclude_from_data_file
    default: 'NO'
  -
    name: groups


---


name: Selectable
abstract: yes
parameters: 
  - 
    name: selection
    options:
      - sequential
      - sequential_ascending
      - sequential_descending
      - random_without_replacement
      - random_with_replacement
    default: sequential
  - 
    name: nsamples
    default: 1
  - 
    name: sampling_method
    options: [cycles, samples]
    default: cycles


---


name: Selection Variable
signature: variable/selection
isa: Selectable
icon: xyz
group: Variables
allowed_parent: 
  - Variables
  - Folder
description: >
    A variable whose value is controlled by a selection object.  A list of
    values is associated with the Selection Variable that are selected by a
    selection object.  Use the `Next Selection` action to advance the
    variable's selection.
parameters: 
  - 
    name: values
    required: yes
  - 
    name: advance_on_accept
    default: 'NO'
  - 
    name: autoreset
    default: 'NO'
  -
    name: groups


---


name: Stimulus
abstract: yes
icon: smallStimulus
group: Stimuli
allowed_parent: 
  - Range Replicator
  - List Replicator
  - Stimuli
  - Stimulus Group
  - Folder
description: Base-level stimulus stub
parameters:
  - 
    name: deferred
    options: ['no', 'yes', 'explicit']
    default: 'no'


---


name: Stimulus Group
signature: stimulus_group
icon: smallStimulusFolder
group: Stimuli
allowed_parent: 
  - Range Replicator
  - List Replicator
  - Stimuli
  - Stimulus Group
  - Folder
description: An indexable group of stimuli


---


name: Basic Transform Stimulus
abstract: yes
isa: Stimulus
parameters: 
  - 
    name: x_size
    required: yes
    example: 5.0
    description: Horizontal size in degrees
  - 
    name: y_size
    required: yes
    example: 5.0
    description: Vertical size in degrees
  - 
    name: x_position
    default: 0.0
  - 
    name: y_position
    default: 0.0
  - 
    name: rotation
    default: 0.0
  - 
    name: alpha_multiplier
    default: 1.0


---


name: Image Stimulus
signature: stimulus/image_file
isa: Basic Transform Stimulus
inspector: ImageStimulusInspectorView
description: An image stimulus loaded from any standard-format image file.
parameters: 
  - 
    name: path
    required: yes
    example:
      - images/image1.png
      - /path/to/image.png
    description: Filesystem path to the image file


---


name: Blank Fullscreen Stimulus
signature: stimulus/blank_screen
isa: Stimulus
description: >
    A stimulus that clears the screen with a user-defined color.  This
    stimulus must be queued like any other.
parameters: 
  - 
    name: color
    default: 0.5,0.5,0.5


---


name: Rectangle Stimulus
signature: stimulus/rectangle
isa: Basic Transform Stimulus
description: A rectangle stimulus
parameters: 
  - 
    name: color
    default: 1.0,1.0,1.0


---


name: Ellipse Stimulus
signature: stimulus/circle
isa: Rectangle Stimulus
description: An ellipse stimulus


---


name: Fixation Point Stimulus
signature: stimulus/fixation_point
isa: Rectangle Stimulus
description: A fixation point stimulus
parameters: 
  - 
    name: trigger_width
    required: yes
  - 
    name: trigger_watch_x
    required: yes
  - 
    name: trigger_watch_y
    required: yes
  - 
    name: trigger_flag
    required: yes


---


name: Circular Fixation Point Stimulus
signature: stimulus/circular_fixation_point
isa: Ellipse Stimulus
description: A circular fixation point stimulus
parameters: 
  - 
    name: trigger_width
    required: yes
  - 
    name: trigger_watch_x
    required: yes
  - 
    name: trigger_watch_y
    required: yes
  - 
    name: trigger_flag
    required: yes


---


name: Sound Stimulus
signature: sound/wav_file
inspector: SoundStimulusInspectorView
group: Stimuli
allowed_parent: 
  - Sounds
  - Folder
description: >
    A simple `WAV <https://en.wikipedia.org/wiki/WAV>`_ file based sound
    stimulus
parameters: 
  - 
    name: path
    required: yes
  - 
    name: amplitude
    default: 1.0


---


name: Paradigm Component
abstract: yes
group: Paradigm Components
allowed_parent: 
  - Range Replicator
  - List Replicator
description: Base-level paradigm component stub


---


name: Range Replicator
signature: range_replicator
icon: replicatorIcon
inspector: RangeReplicatorInspectorView
group: Paradigm Components
allowed_parent: 
  - Experiment
  - Protocol
  - Block
  - Trial
  - List
  - Range Replicator
  - List Replicator
  - Stimuli
  - Stimulus Group
  - Sounds
  - Variables
description: >
    An object that lexically replicates its contents at parse time, with
    substitution of a range variable (like a "for" loop).
parameters: 
  - 
    name: variable
    required: yes
  - 
    name: from
    required: yes
  - 
    name: to
    required: yes
  - 
    name: step
    required: yes


---


name: List Replicator
signature: list_replicator
icon: replicatorIcon
group: Paradigm Components
allowed_parent: 
  - Experiment
  - Protocol
  - Block
  - Trial
  - List
  - Range Replicator
  - List Replicator
  - Stimuli
  - Stimulus Group
  - Sounds
  - Variables
description: >
    An object that lexically replicates its contents at parse time, with
    substitution of a list of values into a variable.
parameters: 
  - 
    name: variable
    required: yes
  - 
    name: values
    required: yes


---


name: Container State
abstract: yes
isa: Paradigm Component
parameters: 
  - 
    name: interruptible
    default: 'YES'


---


name: List State
abstract: yes
isa: [Container State, Selectable]
inspector: ListStateInspectorView


---


name: Protocol
signature: protocol
isa: List State
icon: smallProtocol
allowed_parent: Experiment
description: >
    A top-level paradigm component that contains other sub-components.
    Protocols appear in a user-selected menu at run-time, and represent the
    largest unit of logical organization in an experiment.


---


name: Block
signature: block
isa: List State
icon: smallBlock
allowed_parent: Protocol
description: >
    A container paradigm component.  Blocks can contain other paradigm
    components and have a mechanism for selecting the ordering of selection
    of components contained within them.


---


name: Trial
signature: trial
isa: List State
icon: smallTrial
allowed_parent: 
  - Protocol
  - Block
  - Trial
  - List
description: >
    A container paradigm component.  Trials can contain other paradigm
    components and have a mechanism for selecting the ordering of selection
    of components contained within them.


---


name: List
signature: list
isa: List State
icon: smallList
allowed_parent: 
  - Protocol
  - Block
  - Trial
  - List
description: >
    A container paradigm component.  Lists can contain other paradigm
    components and have a mechanism for selecting the ordering of selection
    of components contained within them.


---


name: Task System
signature: task_system
isa: Container State
icon: smallTaskSystem
allowed_parent: 
  - Protocol
  - Block
  - List
  - Trial
description: >
    A paradigm component defining a finite state machine.  It contains
    `Task System State` objects, which define transitions from one state to
    the next.  The Task System finishes when one of the states evaluates an
    `Exit Task System` transition.


---


name: Task System State
signature: task_system_state
isa: Container State
icon: smallTaskSystemState
allowed_parent: Task System
description: >
    A paradigm component defining a state within a finite state machine.
    It is contained within a `Task System` and defines a list of
    actions, which are executed when the state first gains control, and a
    list of transitions, which are repeatedly evaluated until one of them
    returns a valid target state.


---


name: Action
abstract: yes
icon: actionIcon
group: Actions
allowed_parent: 
  - Task System State
  - Variable
  - Trial
  - Block
  - List
  - Protocol
  - Conditionally Execute Actions
  - Schedule Actions
  - Folder
disallowed_sibling_before: 
  - Transition
  - Variable
  - TransitionMarker
disallowed_sibling_after: ActionMarker
description: Base-level action stub


---


name: ActionMarker
signature: action_marker
unmoveable: yes
allowed_parent: Task System State
disallowed_sibling_before: TransitionMarker


---


name: Report / Message
signature: action/report
isa: Action
icon: reportAction
inspector: ReportInspectorView
description: >
    Print a message to the console.  You can place variables in the message
    by placing a ``$`` in front of them (e.g.  ``x = $x``)
parameters: 
  - 
    name: message
    required: yes


---


name: Assign Variable
signature: action/assignment
isa: Action
icon: actionIcon
inspector: AssignmentInspectorView
description: Assign a value to a global variable object at runtime.
parameters: 
  - 
    name: variable
    required: yes
  - 
    name: value
    required: yes


---


name: Pulse Variable
signature: action/pulse
isa: Action
inspector: PulseInspectorView
description: >
    Pulse a variable high (1.0) for some duration, and then set it low
    (0.0) again.
parameters: 
  - 
    name: variable
    required: yes
  - 
    name: duration
    required: yes


---


name: Assert
signature: action/assert
isa: Action
description: >
    Test a boolean condition.  If it evaluates to false, report an error
    with the specified message.  If no message is specified, a default one
    containing the `condition`_ expression is used.  If `stop_on_failure`_ is
    true, then the experiment will automatically stop if the assertion
    fails.
parameters: 
  - 
    name: condition
    required: yes
  - 
    name: message
  - 
    name: stop_on_failure
    default: 'NO'


---


name: Schedule Actions
signature: action/schedule
isa: Action
inspector: ScheduleInspectorView
description: >
    Schedule the execution of a list of contained actions.  These actions
    can be scheduled to occur after a user-defined delay, and can be
    repeated some number of times, with a user-defined inter-execution
    interval.
parameters: 
  - 
    name: delay
    required: yes
  - 
    name: duration
    required: yes
  - 
    name: repeats
    required: yes
  - 
    name: cancel
    default: 'NO'


---


name: Conditionally Execute Actions
signature: action/if
isa: Action
inspector: IfInspectorView
allowed_parent: Conditional Branching (If/Else)
description: Execute a list of actions if a condition is true.
parameters: 
  - 
    name: condition
    required: yes


---


name: Conditional Branching (If/Else)
signature: action/if_else
isa: Action
description: >
    Given a list of `Conditionally Execute Actions` ("if") actions, executes the
    first one whose condition is true, or none if all conditions are false.  To
    implement an unconditional "else" action, add a conditional with an
    always-true condition at the end of the list.


---


name: Wait
signature: action/wait
isa: Action
icon: startTimer
inspector: WaitInspectorView
description: >
    Pause for a specified amount of time.  Note: This action is not
    intended for precise coordination of timed events.  For a greater
    degree of temporal control, use a `Task System` with a timer object and a
    `Timer Expired Transition`.
parameters: 
  - 
    name: duration
    required: yes
    example: 1.0
  - 
    name: duration_units
    default: us
  - 
    name: timebase


---


name: Wait for Condition
signature: action/wait_for_condition
isa: Action
icon: startTimer
description: >
    Wait until a condition becomes true or a timeout occurs.  If the wait
    times out before the condition becomes true, issue an error message and
    (optionally) stop the experiment.
parameters: 
  - 
    name: condition
    required: yes
  - 
    name: timeout
    required: yes
  - 
    name: timeout_message
  - 
    name: stop_on_timeout
    default: 'YES'


---


name: Start Timer
signature: action/start_timer
isa: Action
icon: startTimer
inspector: StartTimerInspectorView
description: >
    Starts a nameable timer that can be use to control the flow through a
    `Task System`.  The `Timer Expired Transition` and the ``timer()`` function
    can be used to evaulate whether the timer has expired.
parameters: 
  - 
    name: timer
    required: yes
    example: MyTimer
  - 
    name: duration
    required: yes
  - 
    name: duration_units
    default: us
  - 
    name: timebase


---


name: Set Timebase
signature: action/set_timebase
isa: Action
icon: startTimer
inspector: SetTimebaseInspectorView
description: >
    Sets a named reference time against which timers can be defined.
parameters: 
  - 
    name: timebase
    required: yes
    example: MyTimebase


---


name: Load Stimulus
signature: action/load_stimulus
isa: Action
inspector: LoadStimulusInspectorView
description: >
    Explicitly load a stimulus object (e.g. load a file from disk, compute
    a dynamically generated stimulus, etc.).  This is useful when the
    ``deferred`` option on a stimulus is set to ``true`` or ``explicit``.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Unload Stimulus
signature: action/unload_stimulus
isa: Action
description: >
    Explicitly unload a stimulus object, thereby releasing any memory or
    other resources used by the stimulus.  This is useful when the
    ``deferred`` option on a stimulus is set to ``true`` or ``explicit``.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Queue Stimulus
signature: action/queue_stimulus
alias: action/show_stimulus
isa: Action
inspector: QueueStimulusInspectorView
description: >
    Places a stimulus into the display queue, ready to be displayed when
    the next `Update Stimulus Display` action is issued.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Live Queue Stimulus
signature: action/live_queue_stimulus
isa: Action
inspector: QueueStimulusInspectorView
description: >
    Places a stimulus into the display queue, ready to be displayed when the
    next `Update Stimulus Display` action is issued.  In contrast to the
    "regular" `Queue Stimulus` action, values for variables controlling the
    appearance of the stimulus will remain malleable right up until the moment
    that the display is updated.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Dequeue Stimulus
signature: action/dequeue_stimulus
alias: action/hide_stimulus
isa: Action
inspector: DequeueStimulusInspectorView
description: >
    Removes a stimulus from the display queue, such that it will not be
    displayed after the next `Update Stimulus Display` action is issued.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Bring Stimulus to Front
signature: action/bring_stimulus_to_front
isa: Action
description: Move a stimulus to the top of the display queue.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Send Stimulus to Back
signature: action/send_stimulus_to_back
isa: Action
description: Move a stimulus to the bottom of the display queue.
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Update Stimulus Display
signature: action/update_stimulus_display
isa: Action
inspector: UpdateDisplayInspectorView
description: >
    Redraw the stimulus display.  Any stimuli that have been queued will
    actually be drawn at this point; any stimuli that have been dequeued
    will not be drawn (and will thus be erased if they were previously visible).
parameters: 
  - 
    name: predicted_output_time


---


name: Play Sound
signature: action/play_sound
isa: Action
inspector: PlaySoundInspectorView
description: Play a `Sound Stimulus`
parameters: 
  - 
    name: sound
    required: yes


---


name: Pause Sound
signature: action/pause_sound
isa: Action
description: Pause a `Sound Stimulus`
parameters: 
  - 
    name: sound
    required: yes


---


name: Stop Sound
signature: action/stop_sound
isa: Action
inspector: StopSoundInspectorView
description: Stop playing a `Sound Stimulus` (if it is playing)
parameters: 
  - 
    name: sound
    required: yes


---


name: Accept Selections
signature: action/accept_selections
isa: Action
inspector: AcceptSelectionsInspectorView
description: >
    Permanently accept the selections that have been made so far on a selectable
    object.  Once accepted, these selections cannot be undone with a `Reject
    Selections` action.
parameters: 
  - 
    name: selection
    required: yes


---


name: Reject Selections
signature: action/reject_selections
isa: Action
inspector: RejectSelectionsInspectorView
description: >
    Reject all previous selections from a selectable object, since the last
    `Accept Selections` action.  From the point of view of the selectable
    object, it will be as if these selections were never made.
parameters: 
  - 
    name: selection
    required: yes


---


name: Reset Selections
signature: action/reset_selection
isa: Action
inspector: ResetSelectionInspectorView
description: >
    Reset all previous selections from a selectable object.  From the point
    of view of the selectable object, it will be as if these selections
    were never made.
parameters: 
  - 
    name: selection
    required: yes


---


name: Next Selection
signature: action/next_selection
isa: Action
inspector: NextSelectionInspectorView
description: >
    Advance to the next selection on a `Selection Variable`.  This action
    does not work on other selectable objects (such as `Block` or `Trial`).
parameters: 
  - 
    name: selection
    required: yes


---


name: Pause Experiment
signature: action/pause_experiment
isa: Action
description: >
    Pause the experiment


---


name: Resume Experiment
signature: action/resume_experiment
isa: Action
description: >
    Resume a paused experiment


---


name: Stop Experiment
signature: action/stop_experiment
isa: Action
description: >
    Stop the experiment.  Gives an experiment the ability to terminate
    itself (e.g. in response to a fatal error).


---


name: Start IO Device
signature: action/start_device_io
isa: Action
inspector: StartIOInspectorView
description: >
    Enable an IO Device.  Variables will be modified by input channels,
    external outputs to be set by variables, as defined in the IO channels
    for the IO device.
parameters: 
  - 
    name: device
    required: yes


---


name: Stop IO Device
signature: action/stop_device_io
isa: Action
inspector: StopIOInspectorView
description: Disable an IO Device.
parameters: 
  - 
    name: device
    required: yes


---


name: Take Calibration Sample
signature: action/take_calibration_sample
isa: Action
description: >
    Instruct a calibrator object to take a sample from a "calibratable"
    object.  The calibratable objects contain both a measured and a "true"
    value, and the calibrator uses these to determine a mapping function.
parameters: 
  - 
    name: calibrator
    required: yes
  - 
    name: calibratable_object
    required: yes


---


name: Update Calibration
signature: action/update_calibration
isa: Action
description: >
    Prompt a calibrator object to compute a new calibration mapping
    function based on samples taken using the `Take Calibration Sample`
    action.
parameters: 
  - 
    name: calibrator
    required: yes


---


name: Clear Calibration
signature: action/clear_calibration
isa: Action
description: >
    Prompt a calibrator object to "forget" all previously collected
    calibration samples.
parameters: 
  - 
    name: calibrator
    required: yes


---


name: Begin Averaged Calibration Sample
signature: action/begin_calibration_average
isa: Action
description: >
    Begin averaging calibration the values of a variable to be calibrated.
parameters: 
  - 
    name: calibrator
    required: yes


---


name: End Averaged Calibration and Ignore
signature: action/end_calibration_average_and_ignore
isa: Action
description: >
    Stop averaging calibration the values of a variable to be calibrated,
    and discard the sample.
parameters: 
  - 
    name: calibrator
    required: yes


---


name: End Averaged Calibration Sample
signature: action/end_calibration_average_and_take_sample
isa: Action
description: >
    Stop averaging calibration the values of a variable to be calibrated,
    and add the sample to the specified calibrator.
parameters: 
  - 
    name: calibrator
    required: yes
  - 
    name: calibratable_object
    required: yes


---


name: Play Dynamic Stimulus
signature: action/play_dynamic_stimulus
isa: Action
description: Start playing a dynamic stimulus
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Stop Dynamic Stimulus
signature: action/stop_dynamic_stimulus
isa: Action
description: Stop a dynamic stimulus
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Pause Dynamic Stimulus
signature: action/pause_dynamic_stimulus
isa: Action
description: Pause a playing dynamic stimulus
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Unpause Dynamic Stimulus
signature: action/unpause_dynamic_stimulus
isa: Action
description: Unpause (i.e. resume playing) a paused dynamic stimulus
parameters: 
  - 
    name: stimulus
    required: yes


---


name: Transition
abstract: yes
icon: transitionIcon
group: Transitions
allowed_parent: Task System State
disallowed_sibling_after: 
  - Action
  - ActionMarker
  - TransitionMarker
description: Base-level transition stub


---


name: TransitionMarker
signature: transition_marker
unmoveable: yes
allowed_parent: Task System State
disallowed_sibling_after: ActionMarker


---


name: Always Go Transition
signature: transition/direct
isa: Transition
icon: alwaysGo
inspector: AlwaysGoTransitionInspectorView
description: A transition that always goes to the specified target.
parameters: 
  - 
    name: target
    required: yes


---


name: Conditional Transition
signature: transition/conditional
isa: Transition
icon: conditionalTransition
inspector: ConditionalTransitionInspectorView
description: >
    A transition that goes to the target if a specified condition
    expression is true.
parameters: 
  - 
    name: condition
    required: yes
  - 
    name: target
    required: yes


---


name: Timer Expired Transition
signature: transition/timer_expired
isa: Transition
icon: timerTransition
inspector: TimerExpiredTransitionInspectorView
description: >
    A transition that goes to the target if a specified timer has expired.
parameters: 
  - 
    name: target
    required: yes
  - 
    name: timer
    required: yes


---


name: Exit Task System
signature: transition/yield
isa: Transition
icon: yieldToParent
inspector: ExitTaskSystemTransitionInspectorView
description: >
    A transition that yields control back to the parent of the current
    `Task System`


---


name: IODevice
abstract: yes
icon: smallIOFolder
group: Input/Output
allowed_parent: 
  - IODevices
  - Folder
description: Base-level IO device stub


---


name: IOChannel
abstract: yes
icon: smallIOFolder
group: Input/Output
allowed_parent: Folder
description: Base-level IO channel stub


---


name: Stimulus Display
signature: iodevice/stimulus_display
isa: IODevice
description: >
    A stimulus display device.  At present, MWorks always creates one (and
    only one) of these per experiment, regardless of whether the experiment
    file defines one.  By including a definition in your experiment file,
    you can change the display's default background color.
parameters: 
  - 
    name: background_color
    required: yes
    example: 0.5,0.5,0.5
  - 
    name: announce_stimuli_on_implicit_updates
    default: 'YES'


---


name: Calibrator
abstract: yes
icon: fakeMonkey
group: Filters
allowed_parent: 
  - Filters
  - IODevices
  - Folder
description: Base-level calibrator stub


---


name: Eye Calibrator
signature: calibrator/standard_eye_calibrator
isa: Calibrator
icon: fakeMonkey
description: A IO calibrator specially tailored for eye movement signals.
parameters: 
  - 
    name: eyeh_raw
    required: yes
  - 
    name: eyev_raw
    required: yes
  - 
    name: eyeh_calibrated
    required: yes
  - 
    name: eyev_calibrated
    required: yes


---


name: Linear Eye Calibrator
signature: calibrator/linear_eye_calibrator
isa: Calibrator
icon: fakeMonkey
description: A IO calibrator specially tailored for eye movement signals.
parameters: 
  - 
    name: eyeh_raw
    required: yes
  - 
    name: eyev_raw
    required: yes
  - 
    name: eyeh_calibrated
    required: yes
  - 
    name: eyev_calibrated
    required: yes


---


name: Filter
abstract: yes
icon: fakeMonkey
group: Filters
allowed_parent: 
  - Filters
  - IODevices
  - Folder
description: Base-level filter stub


---


name: Box-car Filter
signature: filter/boxcar_filter_1d
isa: Filter
description: A basic 1D boxcar filter
parameters: 
  - 
    name: in1
    required: yes
  - 
    name: out1
    required: yes
  - 
    name: width_samples
    required: yes


---


name: Eye Monitor
signature: filter/basic_eye_monitor
isa: Filter
description: >
    A filter that takes in an eye signal and outputs basic parameters, such
    as velocity, saccade state, etc.
parameters: 
  - 
    name: eyeh_calibrated
    required: yes
  - 
    name: eyev_calibrated
    required: yes
  - 
    name: eye_state
    required: yes
  - 
    name: eye_velocity_h
  - 
    name: eye_velocity_v
  - 
    name: width_samples
    required: yes
  - 
    name: saccade_entry_speed
    required: yes
  - 
    name: saccade_exit_speed
    required: yes


---


name: Optimizer
abstract: yes
icon: smallFolder
group: Optimizers and Variable Monitors
allowed_parent: Optimizers
description: Base-level Optimizer stub


---


name: Simple Staircase Optimizer
signature: staircase
isa: Optimizer
icon: fakeMonkey
inspector: StaircaseInspectorView
description: >
    An object that watches a variable (e.g. a flag reporting success in a
    behavioral task), and moves another variable up and down according to
    some criteria.
parameters: 
  - 
    name: watch
    required: yes
  - 
    name: output
    required: yes
  - 
    name: lower_limit
    required: yes
  - 
    name: upper_limit
    required: yes
  - 
    name: up_criterion
    required: yes
  - 
    name: down_criterion
    required: yes
  - 
    name: step_size
    required: yes
  - 
    name: grace_period
    required: yes
  - 
    name: history
    required: yes


---


name: Bias Monitor
signature: bias_monitor
isa: Optimizer
icon: fakeMonkey
inspector: BiasMonitorInspectorView
description: >
    An object that watches parameters of a behavioral task and assesses the
    probability that the subject is adopting some form of biased strategy
parameters: 
  - 
    name: success
    required: yes
  - 
    name: response_index
    required: yes
  - 
    name: task_correlation
    required: yes
  - 
    name: response_bias_correlation
    required: yes
  - 
    name: alternation_correlation
    required: yes
  - 
    name: history
    required: yes
  - 
    name: grace_period
    required: yes


